#include "thingProperties.h"
#include <EmonLib.h> // For current sensor


EnergyMonitor emon1; // Create EmonLib instance

// Controle de tempo para envio de dados
unsigned long lastSend = 0;
const long intervalo = 1000; // 1 second
double energiaAcumulada = 0; // Optional: kWh accumulator

void setup() {
  // Initialize serial monitor
  Serial.begin(115200);
  delay(1500);

  // Configure your current sensor
  // Replace 2.87 with your calibration factor
  // Replace 32 with the ADC pin connected to your SCT sensor
  emon1.current(32, 2.79);

  // Initialize Arduino IoT Cloud properties
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);

  // Debug info
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();

  // Send data every 'intervalo' ms
  if (millis() - lastSend > intervalo) {
    double Irms = emon1.calcIrms(1480);
    

    // Send current to Arduino Cloud variable
    corrente = Irms;


    // Local debug
    Serial.print("Corrente (Irms): ");
    Serial.print(Irms, 3);
    Serial.println(" A");

    lastSend = millis();
  }
}

// This runs when the Cloud variable 'Corrente' changes remotely
void onCorrenteChange() {
  // Normally not needed for sensor-read variables
}
